@model Store.Views.Orders.DetailsModel
@{
    ViewData["Title"] = "Details";

}

<h1>Details</h1>

<div>
    <h4>Order</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Order.User)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Order.User.UserName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Order.Date)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Order.Date)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Order.Status)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Order.Status)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Order.TotalPrice)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Order.TotalPrice)
        </dd>
    </dl>
    <table class="table">
        <thead>
			<tr>
				<th>
                    @Html.DisplayNameFor(model => model.OrderProducts[0].Product.Name)
                </th>
                <th>
					@Html.DisplayNameFor(model => model.OrderProducts[0].Product.Price)
                </th>
                <th>
					@Html.DisplayNameFor(model => model.OrderProducts[0].Quantity)
                </th>

			</tr>
		</thead>
		<tbody>
            @foreach (var item in Model.OrderProducts)
			{
			    <tr>
                    <td>
						@Html.DisplayFor(modelItem => item.Product.Name)
					</td>
					<td>
                        @Html.DisplayFor(modelItem => item.Product.Price)
                    </td>
                    <td>
						@Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                </tr>
			}
		</tbody>
    </table>
</div>
<div>
    <a asp-action="Index">Back to List</a>
</div>
